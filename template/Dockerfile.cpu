# Start with official slim Python image
FROM python:3.11-slim AS builder

WORKDIR /app

# Install build dependencies for compiling packages if needed
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    git \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Install Poetry
RUN curl -sSL https://install.python-poetry.org | python3 -

ENV PATH="/root/.local/bin:$PATH"

# Copy only dependency files to leverage cache
COPY pyproject.toml poetry.lock* /app/

# Install dependencies without dev packages
RUN poetry config virtualenvs.create false \
 && poetry install --no-interaction --no-ansi --no-root --only main

# Copy source code
COPY . /app/

# ------ Final stage ------
FROM python:3.11-slim

WORKDIR /app

# Create non-root user and group
RUN groupadd --gid 1000 appgroup && \
    useradd --uid 1000 --gid appgroup --shell /bin/bash --create-home appuser

# Copy installed packages and source code from builder
COPY --from=builder /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages
COPY --from=builder /app /app

# Change ownership to non-root user
RUN chown -R appuser:appgroup /app

# Switch to non-root user
USER appuser

ENV PYTHONUNBUFFERED=1

# Expose ports here if needed
# EXPOSE 8000

# Default command
CMD ["python", "src/main.py"]
# Note: Adjust the CMD line to match your application's entry point