name: Docs

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  build-docs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache Poetry and pip
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pypoetry
            ~/.cache/pip
          key: poetry-docs-${{ runner.os }}-3.11-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            poetry-docs-${{ runner.os }}-3.11-

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: "1.8.2"
          virtualenvs-create: false
          virtualenvs-in-project: false

      - name: Install dependencies
        run: poetry install --no-interaction

      - name: Build MkDocs site
        run: poetry run mkdocs build

  deploy-docs:
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: build-docs

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: "1.8.2"
          virtualenvs-create: false
          virtualenvs-in-project: false

      - name: Install dependencies
        run: poetry install --no-interaction

      - name: Build MkDocs site
        run: poetry run mkdocs build

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site
