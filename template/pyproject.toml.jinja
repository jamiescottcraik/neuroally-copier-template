[tool.poetry]
name = "{{ package_name }}"
version = "0.1.0"
description = "{{ description }}"
authors = ["{{ author_name }} <your@email.com>"]
license = "{{ license }}"
readme = "README.md"
packages = [
    { include = "{{ package_name }}" },
]

[tool.poetry.dependencies]
python = "^{{ python_version }}"
pydantic = "^2.7"
pydantic-settings = "^2.2"
python-dotenv = "^1.0"
# Core AI/deps belowâ€”CPU only by default for broadest compatibility.
# Uncomment and upgrade for GPU as needed (see README).
# torch = "^2.2"            # CPU version (see PyTorch site for CUDA/GPU wheels)
# tensorflow = "^2.16"      # CPU version (see TensorFlow site for GPU guidance)
# fastapi = "^0.110"
# streamlit = "^1.35"
# openai = "^1.14"
# google-cloud-aiplatform = "^1.48"
# transformers = "^4.41"
# Add/remove as needed per project/provider.

[tool.poetry.group.dev.dependencies]
pytest = "^8.2"
pytest-cov = "^5.0"
mypy = "^1.10"
ruff = "^0.4"
black = "^24.4"
pre-commit = "^3.7"
mkdocs = "^1.6"
mkdocs-material = "^9.5"
mkdocs-macros-plugin = "^1.0"
mike = "^2.0"
jupyter = "^1.0"
# nbdime = "^4.0"         # For notebook diffs, optional

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ["py310", "py311", "py312"]

[tool.ruff]
line-length = 88
select = ["E", "F", "B", "I", "UP"]
target-version = "py310"
ignore = ["E501"]  # Let Black handle line length

[tool.mypy]
python_version = "{{ python_version }}"
ignore_missing_imports = true
disallow_untyped_defs = true
check_untyped_defs = true
show_error_codes = true
strict = true

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "--cov=src --cov-report=term --cov-report=xml"
testpaths = ["tests"]

[tool.pydantic-mypy]
init_typed = true
warn_required_dynamic_aliases = true

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3

#[tool.poetry.scripts]
# Example CLI entrypoint (uncomment if you wire up a CLI):
# neuroally = "{{ package_name }}.main:main"

# -------------------------
# GPU Support Guidance:
# - PyTorch: see https://pytorch.org/get-started/locally/ for CUDA wheels
# - TensorFlow: see https://www.tensorflow.org/install for GPU setup
# By default, dependencies here are CPU-only.
# -------------------------

# [tool.mkdocs]
# (Keep mkdocs.yml for actual documentation config)
